<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.quncao.lark">

    <!--如果是安卓8.0，应用编译配置的targetSdkVersion>=26，请务必添加以下权限 -->
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" />
    <application>

        <meta-data android:name="XG_MI_APP_ID" android:value="${XG_MI_APP_ID}\0"/>
        <meta-data android:name="XG_MI_APP_KEY" android:value="${XG_MI_APP_KEY}\0"/>

        <meta-data android:name="XG_MZ_APP_ID" android:value="${XG_MZ_APP_ID}\0"/>
        <meta-data android:name="XG_MZ_APP_KEY" android:value="${XG_MZ_APP_KEY}\0"/>

        <meta-data
            android:name="com.huawei.hms.client.appid" android:value="appid=${HW_APPID}">
        <!-- value的值“xxx”用实际申请的应用ID替换，来源于开发者联盟网站应用的服务详情。--></meta-data>

    <activity android:name="com.yhy.push.ReceiveNotificationActivity"
            android:theme="@style/Theme.AppCompat"
        android:launchMode="singleTask">

            <intent-filter >
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT"/>
                <data android:scheme="yhyxgscheme"
                    android:host="com.xg.push"
                    android:path="/notify_detail" />
            </intent-filter>
        </activity>

        <receiver android:name="com.yhy.push.MyXGReceiver"
            android:exported="true" >
            <intent-filter>
                <!-- 接收消息透传 -->
                <action android:name="com.tencent.android.tpush.action.PUSH_MESSAGE" />
                <!-- 监听注册、反注册、设置/删除标签、通知被点击等处理结果 -->
                <action android:name="com.tencent.android.tpush.action.FEEDBACK" />

            </intent-filter>
        </receiver>

        <receiver
            android:exported="true"
            android:name="com.yhy.push.MyXGMiReceiver">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>


        </receiver>

        <!-- 默认的自定义广播接收器，用于自定义处理魅族push消息广播，receiver的name为自定义的广播接收类 start -->
        <receiver android:name="com.yhy.push.MyXGMZReceiver">
            <intent-filter>
                <!-- 接收push消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <!-- 接收register消息-->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK"/>
                <!-- 接收unregister消息-->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK"/>

                <action android:name="com.meizu.c2dm.intent.REGISTRATION" />
                <action android:name="com.meizu.c2dm.intent.RECEIVE" />
                <action android:name="com.xxx.notification" />
                <category android:name="${PACKAGE_NAME}"/>
            </intent-filter>
        </receiver>

        <receiver android:name="com.yhy.push.MyXXReceiver">
            <intent-filter>
                <action android:name="com.xxx.notification" />
                <data android:scheme="push"/>
            </intent-filter>
        </receiver>

        <receiver android:name="com.yhy.push.MyXGHuaWeiReceiver" >
            <intent-filter>

            <!-- 必须,用于接收TOKEN -->
            <action android:name="com.huawei.android.push.intent.REGISTRATION" />
            <!-- 必须，用于接收消息 -->
            <action android:name="com.huawei.android.push.intent.RECEIVE" />
            <action android:name="com.huawei.intent.action.PUSH" />

            <!-- 可选，用于点击通知栏或通知栏上的按钮后触发onEvent回调 -->
            <action android:name="com.huawei.android.push.intent.CLICK" />
            <!-- 可选，查看PUSH通道是否连接，不查看则不需要 -->
            <action android:name="com.huawei.intent.action.PUSH_STATE" />
            </intent-filter>
        </receiver>

        <!-- 接入HMSSDK 需要注册的provider，authorities 一定不能与其他应用一样，所以这边 com.quncao.lark 要替换上您应用的包名
           Access HMSSDK need to register provider,authorities must not be the same as other applications, so this side ${package_name} to replace the package name you applied-->
        <provider
            android:name="com.huawei.hms.update.provider.UpdateProvider"
            android:authorities="com.quncao.lark.hms.update.provider"
            android:exported="false"
            android:grantUriPermissions="true"/>

        <!-- 接入HMSSDK 需要注册的provider，authorities 一定不能与其他应用一样，所以这边 com.quncao.lark 要替换上您应用的包名
            Access HMSSDK need to register provider,authorities must not be the same as other applications, so this side ${package_name} to replace the package name you applied-->
        <provider
            android:name="com.huawei.updatesdk.fileprovider.UpdateSdkFileProvider"
            android:authorities="com.quncao.lark.updateSdk.fileProvider"
            android:exported="false"
            android:grantUriPermissions="true">
        </provider>

        <!--<activity android:name=".OpendeviceActivity"/>-->

        <!-- 使用 HMSAgent 代码接入HMSSDK 需要注册的activity | Use hmsagent code to access HMSSDK activity that requires registration-->
        <activity
            android:name="com.huawei.android.hms.agent.common.HMSAgentActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered-->
        <activity
            android:name="com.huawei.hms.activity.BridgeActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered-->
        <activity
            android:name="com.huawei.updatesdk.service.otaupdate.AppUpdateActivity"
            android:configChanges="orientation|screenSize"
            android:exported="false"
            android:theme="@style/upsdkDlDialog" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent.NoTitleBar" />
        </activity>

        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered-->
        <activity
            android:name="com.huawei.updatesdk.support.pm.PackageInstallerActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:exported="false"
            android:theme="@style/upsdkDlDialog" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <!-- 接入HMSSDK PUSH模块需要注册 :接收通道发来的通知栏消息 | The access HMSSDK push module needs to be registered: the notification bar message sent from the receiving channel -->
        <receiver android:name="com.huawei.hms.support.api.push.PushEventReceiver" >
            <intent-filter>
                <action android:name="com.huawei.intent.action.PUSH" />
            </intent-filter>
        </receiver>

        <!-- 接入HMSSDK 需要注册的应用下载服务 | Access HMSSDK need to register app download service-->
        <service android:name="com.huawei.updatesdk.service.deamon.download.DownloadService"
            android:exported="false"/>
    </application>
</manifest>
